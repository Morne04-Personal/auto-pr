name: Auto Pull Request

on:
  push:
    branches:
      - main  # Or your default branch

jobs:
  create_pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This line grants write access to the repository's contents
      pull-requests: write # This line grants write access to pull requests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required to get all history

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Or your preferred version

      - name: Install Dependencies
        run: npm install @octokit/rest

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Important: Use a secret
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          BRANCH_NAME="auto-pr/$COMMIT_SHA"

          # Create a new branch for the PR
          git checkout -b "$BRANCH_NAME"

          # Push the new branch to the remote repository
          git push origin "$BRANCH_NAME"

          # Use Octokit to create the pull request
          node <<EOF
          const { Octokit } = require("@octokit/rest");
          const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
          process.env.COMMIT_MESSAGE = "$COMMIT_MESSAGE"
          process.env.COMMIT_SHA = "$COMMIT_SHA"
          process.env.BRANCH_NAME = "$BRANCH_NAME"
          async function createPullRequest() {
            try {
              const owner = process.env.GITHUB_REPOSITORY_OWNER;
              const repo = process.env.GITHUB_REPOSITORY.split('/')[1]; // Extract repo name
  
              const response = await octokit.pulls.create({
                owner: owner,
                repo: repo,
                title: process.env.COMMIT_MESSAGE,
                head: process.env.BRANCH_NAME,
                base: 'main',
                body: `Automated PR for commit ${process.env.COMMIT_SHA}. Commit message: ${process.env.COMMIT_MESSAGE}`,
              });
  
              console.log('Pull request created:', response.data.html_url);
            } catch (error) {
              console.error('Error creating pull request:', error);
            }
          }
          
          createPullRequest();
          EOF