name: Auto Pull Request

on:
  push:
    branches:
      - main

jobs:
  create_pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install @octokit/rest

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure Git identity
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          # Get the current and previous commit SHAs
          CURRENT_SHA=$(git rev-parse HEAD)
          PREVIOUS_SHA=$(git rev-parse HEAD~1)

          # Create a new branch from the previous commit
          BRANCH_NAME="auto-pr/$CURRENT_SHA"
          git checkout -b "$BRANCH_NAME" $PREVIOUS_SHA

          # Cherry-pick the current commit onto the new branch
          git cherry-pick $CURRENT_SHA

          # Push the branch with the cherry-picked commit
          git push origin "$BRANCH_NAME"

          # Get the commit message
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)

          # Run the Node.js script with environment variables passed in
          node -e '
            async function main() {
              const { Octokit } = await import("@octokit/rest");
              const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

              try {
                const owner = process.env.GITHUB_REPOSITORY_OWNER;
                const repo = process.env.GITHUB_REPOSITORY.split("/")[1];

const response = await octokit.pulls.create({
              owner,
              repo,
              title: "Test title",
              head: "test-head",
              base: 'main',
              body: 'Automated PR for commit ' + "testSha" + '\\nCommit message: ' + "testMessage",
            });

                console.log("Pull request created:", response.data.html_url);
              } catch (error) {
                console.error("Error creating pull request:", error);
                process.exit(1);
              }
            }

            main().catch((error) => {
              console.error(error);
              process.exit(1);
            });
          ' \
          COMMIT_MESSAGE="$COMMIT_MESSAGE" \
          BRANCH_NAME="$BRANCH_NAME" \
          CURRENT_SHA="$CURRENT_SHA"